name: pytest

on:
  push:
    branches: [ main ]
    paths-ignore: # prevents workflow execution when only these types of files are modified
      - "**.ipynb"
      - "**.md" # wildcards prevent file in any repo dir from trigering workflow
      - "**.rst"
      - "**.txt"
      - "**.ya?ml" # captures both .yml and .yaml
      - "LICENSE"
      - ".gitignore"
  pull_request:
    branches: [ main ]
    paths-ignore: # prevents workflow execution when only these types of files are modified
      - "**.md" # wildcards prevent file in any repo dir from trigering workflow
      - "**.rst"
      - "**.txt"
      - "**.ya?ml" # captures both .yml and .yaml
      - "LICENSE"
      - ".gitignore"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  pytest:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        floatx: [float64]
        python-version: ["3.12"]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    env:
      AESARA_FLAGS: floatX=${{ matrix.floatx }},gcc__cxxflags='-march=native'
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4
      - name: Cache conda
        uses: actions/cache@v4
        env:
          # Increase this value to reset cache if environment-dev.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('conda-envs/environment-dev.yml') }}
      - name: Cache multiple paths
        uses: actions/cache@v4
        env:
          # Increase this value to reset cache if requirements.txt has not changed
          CACHE_NUMBER: 0
        with:
          path: |
            ~/.cache/pip
            $RUNNER_TOOL_CACHE/Python/*
            ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-build-${{ matrix.python-version }}-${{
            hashFiles('requirements.txt') }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: stratmc-dev
          channel-priority: strict
          environment-file: conda-envs/environment-dev.yml
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

      - name: Install stratmc
        run: |
          conda activate stratmc-dev
          python setup.py install

      - name: Run pytest
        shell: bash -l {0}
        run: |
          conda activate stratmc-dev
          python -m pytest --cov=stratmc --cov-report=xml --cov-report term stratmc/tests/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          directory: ./coverage/reports/
          env_vars: OS,PYTHON
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          name: codecov-umbrella
          path_to_write_report: ./coverage/codecov_report.txt
          verbose: true
